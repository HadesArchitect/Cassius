# TODO allow staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods combinations java.util.Collection
persistence:
  enabled: false
  size: "100Gi"
controller:
  customJenkinsLabels:
    - controller
  installPlugins:
    - job-dsl:1.87
    - configuration-as-code:1763.vb_fe9c1b_83f7b
    - kubernetes:4186.v1d804571d5d4
    - startup-trigger-plugin:2.9.4
    - git
    - workflow-job:1385.vb_58b_86ea_fff1
    - workflow-cps
    - junit:1256.v002534a_5f33e
    - workflow-aggregator:596.v8c21c963d92d
    - blueocean:1.27.10
    - ws-cleanup:0.45
    - pipeline-build-step:540.vb_e8849e1a_b_d8
    - test-stability:2.3
    - copyartifact:722.v0662a_9b_e22a_c
  JCasC:
    configScripts:
      welcome-message: |
        jenkins:
          systemMessage: Welcome to Cassius!
      test-job: |
        jobs:
          - script: >
              pipelineJob('dsl-cassius') {
                definition {
                  cpsScm {
                    scm {
                      git {
                        remote {
                          url('https://github.com/HadesArchitect/cassandra')
                        }
                        branch('*/aleks-cassius')
                        scriptPath('.jenkins/Jenkinsfile')
                      }
                    }
                    lightweight()
                  }
                }
              }
    securityRealm: |-
      local:
        allowsSignup: false
        enableCaptcha: false
        users:
        - id: "admin"
          name: "Jenkins Admin"
          password: "admin"
#          password: "${chart-admin-password}"
    authorizationStrategy: |-
      loggedInUsersCanDoAnything:
        allowAnonymousRead: false
    scritpApproval: |-
      security:
        scriptApproval:
          approvedSignatures:
          - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods combinations java.util.Collection"
          - "staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods inspect java.lang.Object"
agent:
  disableDefaultAgent: true
  podTemplates:
    agent-dind: |
      - name: agent-dind
        label: agent-dind cassandra cassandra-arm64
        activeDeadlineSeconds: '0'
        idleMinutes: '5'
        instanceCap: '30'
        nodeUsageMode: "NORMAL"
        showRawYaml: 'true'
        slaveConnectTimeout: '30'
        yamlMergeStrategy: override
        containers:
          - name: jnlp
            alwaysPullImage: true
            envVars:
              - envVar:
                  key: DOCKER_TLS_CERTDIR
                  value: /certs/client/
              - envVar:
                  key: DOCKER_CERT_PATH
                  value: /certs/client/
              - envVar:
                  key: DOCKER_TLS_VERIFY
                  value: 'true'
              - envVar:
                  key: DOCKER_HOST
                  value: tcp://localhost:2376
            # image: <DOCKER_SLAVE_IMAGE>:latest  # FROM jenkins/inbound-agent, install dockeri cli
            image: hadesarchitect/jenkins-inbound-agent-dind:linux-amd64-procps
            livenessProbe:
              failureThreshold: '0'
              initialDelaySeconds: '0'
              periodSeconds: '0'
              successThreshold: '0'
              timeoutSeconds: '0'
            privileged: 'false'
            resourceRequestCpu: '1'
            resourceLimitCpu: '1'
            resourceRequestMemory: 1Gi
            resourceLimitMemory: 1Gi
            ttyEnabled: 'false'
            workingDir: /home/jenkins/agent
          - name: dind
            alwaysPullImage: 'false'
            envVars:
            - envVar:
                key: DOCKER_TLS_CERTDIR
                value: /certs
            - envVar:
                key: "DOCKER_IPTABLES_LEGACY"
                value: "1"
            image: docker:dind
            args: "--default-address-pool base=192.168.96.0/20,size=24"  # overwrite docker subnet in case of overlapping 
            livenessProbe:
              failureThreshold: '0'
              initialDelaySeconds: '0'
              periodSeconds: '0'
              successThreshold: '0'
              timeoutSeconds: '0'
            privileged: 'true'
            resourceRequestCpu: '4'
            resourceLimitCpu: '4'
            resourceRequestMemory: 18Gi
            resourceLimitMemory: 18Gi
            ttyEnabled: 'false'
            workingDir: /home/jenkins/agent
        volumes:
          - emptyDirVolume:
              memory: 'false'
              mountPath: /var/lib/docker
          - emptyDirVolume:
              memory: 'false'
              mountPath: /certs
